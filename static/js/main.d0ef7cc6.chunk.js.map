{"version":3,"sources":["reducer/reducer.js","components/table/Table.js","actions/actions.js","components/utils/utils.js","App.js","index.js"],"names":["initialState","data","visibleData","fetching","sorting","text","currentPage","totalCount","reducer","state","action","type","payload","Error","setData","value","setVisibleData","setTotalCount","setFetching","setCurrentPage","setSorting","setText","TableList","useReducer","dispatch","pages","pagesCount","i","push","createPages","Math","ceil","useEffect","axios","get","then","res","newData","map","item","number","random","headers","catch","error","console","finally","handlePagination","page","Container","className","ButtonGroup","index","Button","size","onClick","Form","Control","onChange","event","txt","filter","title","includes","handleSearch","target","name","placeholder","Table","striped","bordered","hover","style","sort","a","b","handleSort","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ef7cc6.chunk.js","sourcesContent":["export const initialState = {\r\n    data: [],\r\n    visibleData: [],\r\n    fetching: true,\r\n    sorting: true,\r\n    text: '',\r\n    currentPage: 1,\r\n    totalCount: 0,\r\n}\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_DATA\":\r\n            return {...state, data: action.payload}\r\n        case \"SET_VISIBLE_DATA\": \r\n            return {...state, visibleData: action.payload}\r\n        case \"SET_TOTAL_COUNT\":\r\n            return {...state, totalCount: action.payload}\r\n        case \"SET_FETCHING\":\r\n            return {...state, fetching: action.payload}\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {...state, currentPage: action.payload}\r\n        case \"SET_SORTING\":\r\n            return {...state, sorting: action.payload}\r\n        case \"SET_TEXT\":\r\n            return {...state, text: action.payload}\r\n        default:\r\n            throw new Error()\r\n    }\r\n}","import React, {useEffect, useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport {initialState, reducer} from '../../reducer/reducer'\r\nimport {createPages, getRandom, tableRow} from '../utils/utils'\r\nimport {Container, Table, Button, ButtonGroup, Form} from 'react-bootstrap'\r\nimport * as actions from '../../actions/actions'\r\nconst {setData, setVisibleData, setTotalCount, setFetching, setCurrentPage, setSorting, setText} = actions\r\n\r\nexport const TableList = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const {data, visibleData, fetching, totalCount, currentPage, sorting, text} = state\r\n\r\n  const pagesCount = Math.ceil(totalCount / 50)\r\n  const pages = []\r\n  createPages(pages, pagesCount, currentPage)\r\n\r\n  useEffect(() => {\r\n    if (fetching) {\r\n      axios.get(`https://jsonplaceholder.typicode.com/photos?_limit=50&_page=${currentPage}`)\r\n      .then(res => {\r\n        const newData = res.data.map(item => {\r\n          return {\r\n            ...item,\r\n            number: getRandom()\r\n          }\r\n        })\r\n        dispatch(setData(newData))\r\n        dispatch(setVisibleData(newData))\r\n        if (!totalCount) {\r\n          dispatch(setTotalCount(res.headers['x-total-count']))\r\n        }\r\n        dispatch(setFetching(false))\r\n      })\r\n      .catch(error => console.error(error))\r\n      .finally(() => dispatch(setFetching(false)))\r\n    }\r\n  }, [fetching, currentPage, totalCount])\r\n  \r\n  const handlePagination = (page) => {\r\n    if (currentPage !== page) {\r\n      dispatch(setCurrentPage(page))\r\n      dispatch(setFetching(true))\r\n    }\r\n  }\r\n  const handleSort = (data) => {\r\n    const newData = [...data]\r\n    if (sorting) {\r\n      newData.sort((a, b) => a.number - b.number)\r\n      dispatch(setSorting(false))\r\n    } else {\r\n      newData.sort((a, b) => b.number - a.number)\r\n      dispatch(setSorting(true))\r\n    }\r\n    dispatch(setVisibleData(newData))\r\n  }\r\n  const handleSearch = (data, txt) => {\r\n    if (txt === '') {\r\n      dispatch(setVisibleData(data))\r\n      dispatch(setText(txt))\r\n    } else {\r\n      dispatch(setVisibleData(data.filter(item => item.title.includes(txt))))\r\n      dispatch(setText(txt))\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Container className=\"text-center\">\r\n      <ButtonGroup className=\"d-block mt-2 mb-2\">\r\n        {pages.map((item, index) => {\r\n          return (\r\n            <Button \r\n              className={currentPage === item ? `active` : ``} \r\n              size=\"sm\" key={index} \r\n              onClick={() => handlePagination(item)}>{item}\r\n            </Button>\r\n          )\r\n        })}\r\n      </ButtonGroup>\r\n      <Form.Control \r\n        size=\"sm\" onChange={(event) => handleSearch(data, event.target.value)}\r\n        className=\"w-50 mb-2 d-inline\"\r\n        type=\"text\" name=\"search\" \r\n        placeholder=\"Search\" \r\n        value={text}/>\r\n      {\r\n        fetching ?\r\n          <div>Loading...</div>\r\n          :\r\n          <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th style={{\"cursor\": \"pointer\"}} onClick={() =>handleSort(visibleData)}>Number of photo</th>\r\n                <th>Title</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                visibleData.map(item => tableRow(item.id, item.number, item.title))                    \r\n              }\r\n            </tbody>\r\n          </Table>\r\n      }\r\n      <ButtonGroup className=\"d-block mt-2 mb-2\">\r\n        {pages.map((item, index) => {\r\n          return (\r\n            <Button \r\n              className={currentPage === item ? `active` : ``} \r\n              size=\"sm\" key={index} \r\n              onClick={() => handlePagination(item)}>{item}\r\n            </Button>\r\n          )\r\n        })}\r\n      </ButtonGroup>\r\n    </Container>\r\n  )\r\n}","const setData = (value) => ({type: \"SET_DATA\", payload: value})\r\nconst setVisibleData = (value) => ({type: \"SET_VISIBLE_DATA\", payload: value})\r\nconst setTotalCount = (value) => ({type: \"SET_TOTAL_COUNT\", payload: value})\r\nconst setFetching = (value) => ({type: \"SET_FETCHING\", payload: value})\r\nconst setCurrentPage = (value) => ({type: \"SET_CURRENT_PAGE\", payload: value})\r\nconst setSorting = (value) => ({type: \"SET_SORTING\", payload: value})\r\nconst setText = (value) => ({type: \"SET_TEXT\", payload: value})\r\n\r\nexport {\r\n    setData,\r\n    setVisibleData,\r\n    setTotalCount,\r\n    setFetching,\r\n    setCurrentPage,\r\n    setSorting,\r\n    setText\r\n}","export function createPages(pages, pagesCount, currentPage) {\r\n    if(pagesCount > 10) {\r\n        if(currentPage > 6) {\r\n            for (let i = currentPage-5; i <= currentPage+5; i++) {\r\n                pages.push(i)\r\n                if(i === pagesCount) break\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if(i === pagesCount) break\r\n            }\r\n        }\r\n    }  else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}\r\nexport function getRandom() {\r\n    return Math.ceil(Math.random() * 10000);\r\n}\r\nexport function tableRow (id, number, title) {\r\n    return (\r\n        <tr key={id}>\r\n            <td>{id}</td>\r\n            <td>{number}</td>\r\n            <td>{title}</td>\r\n        </tr>\r\n    )\r\n}","import React from 'react'\nimport {TableList} from './components/table/Table'\n\nexport const App = () => {\n  return (\n    <TableList />\n  )\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {App} from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}